use strum::Display;

// https://github.com/dekuNukem/Nintendo_Switch_Reverse_Engineering/blob/master/bluetooth_hid_subcommands_notes.md
#[derive(Clone, Copy, Debug, Display, Eq, PartialEq, Ord, PartialOrd, Hash)]
pub enum Subcommand {
    GetOnlyControllerState,
    BluetoothManualPairing,
    RequestDeviceInfo,
    SetInputReportMode,
    TriggerButtonsElapsedTime,
    GetPageListState,
    SetHciState,
    ResetPairingInfo,
    SetShipmentState,
    SpiFlashRead,
    SpiFlashWrite,
    SpiSectorErase,
    ResetNfcIrMcu,
    SetNfcIrMcuConfig,
    SetNfcIrMcuState,
    SetUnknownData0x24,
    ResetUnknownData0x24,
    SetUnknownNfcIrMcu,
    Get0x28NfcIrMcuData,
    SetGpioPinOutputValue2,
    Get0x29NfcIrMcuData,
    SetPlayerLights,
    GetPlayerLights,
    SetHomeLight,
    Enable6AxisSensor,
    Set6AxisSensitivity,
    WriteTo6AxisRegisters,
    Read6AxisRegisters,
    EnableVibration,
    GetRegulatedVoltage,
    SetGpioPinOutputValue7_15,
    GetGpioPinInputOutputValue,
}

impl Subcommand {
    pub fn from_byte(byte: u8) -> Option<Self> {
        match byte {
            0x00 => Some(Self::GetOnlyControllerState),
            0x01 => Some(Self::BluetoothManualPairing),
            0x02 => Some(Self::RequestDeviceInfo),
            0x03 => Some(Self::SetInputReportMode),
            0x04 => Some(Self::TriggerButtonsElapsedTime),
            0x05 => Some(Self::GetPageListState),
            0x06 => Some(Self::SetHciState),
            0x07 => Some(Self::ResetPairingInfo),
            0x08 => Some(Self::SetShipmentState),
            0x10 => Some(Self::SpiFlashRead),
            0x11 => Some(Self::SpiFlashWrite),
            0x12 => Some(Self::SpiSectorErase),
            0x20 => Some(Self::ResetNfcIrMcu),
            0x21 => Some(Self::SetNfcIrMcuConfig),
            0x22 => Some(Self::SetNfcIrMcuState),
            0x24 => Some(Self::SetUnknownData0x24),
            0x25 => Some(Self::ResetUnknownData0x24),
            0x28 => Some(Self::SetUnknownNfcIrMcu),
            0x29 => Some(Self::Get0x28NfcIrMcuData),
            0x2A => Some(Self::SetGpioPinOutputValue2),
            0x2B => Some(Self::Get0x29NfcIrMcuData),
            0x30 => Some(Self::SetPlayerLights),
            0x31 => Some(Self::GetPlayerLights),
            0x38 => Some(Self::SetHomeLight),
            0x40 => Some(Self::Enable6AxisSensor),
            0x41 => Some(Self::Set6AxisSensitivity),
            0x42 => Some(Self::WriteTo6AxisRegisters),
            0x43 => Some(Self::Read6AxisRegisters),
            0x48 => Some(Self::EnableVibration),
            0x50 => Some(Self::GetRegulatedVoltage),
            0x51 => Some(Self::SetGpioPinOutputValue7_15),
            0x52 => Some(Self::GetGpioPinInputOutputValue),
            _ => None,
        }
    }

    pub fn to_byte(&self) -> u8 {
        match self {
            Self::GetOnlyControllerState => 0x00,
            Self::BluetoothManualPairing => 0x01,
            Self::RequestDeviceInfo => 0x02,
            Self::SetInputReportMode => 0x03,
            Self::TriggerButtonsElapsedTime => 0x04,
            Self::GetPageListState => 0x05,
            Self::SetHciState => 0x06,
            Self::ResetPairingInfo => 0x07,
            Self::SetShipmentState => 0x08,
            Self::SpiFlashRead => 0x10,
            Self::SpiFlashWrite => 0x11,
            Self::SpiSectorErase => 0x12,
            Self::ResetNfcIrMcu => 0x20,
            Self::SetNfcIrMcuConfig => 0x21,
            Self::SetNfcIrMcuState => 0x22,
            Self::SetUnknownData0x24 => 0x24,
            Self::ResetUnknownData0x24 => 0x25,
            Self::SetUnknownNfcIrMcu => 0x28,
            Self::Get0x28NfcIrMcuData => 0x29,
            Self::SetGpioPinOutputValue2 => 0x2A,
            Self::Get0x29NfcIrMcuData => 0x2B,
            Self::SetPlayerLights => 0x30,
            Self::GetPlayerLights => 0x31,
            Self::SetHomeLight => 0x38,
            Self::Enable6AxisSensor => 0x40,
            Self::Set6AxisSensitivity => 0x41,
            Self::WriteTo6AxisRegisters => 0x42,
            Self::Read6AxisRegisters => 0x43,
            Self::EnableVibration => 0x48,
            Self::GetRegulatedVoltage => 0x50,
            Self::SetGpioPinOutputValue7_15 => 0x51,
            Self::GetGpioPinInputOutputValue => 0x52,
        }
    }
}
